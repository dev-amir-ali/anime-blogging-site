'use client';

import { useFormState, useFormStatus } from 'react-dom';
import { useEffect, useRef } from 'react';
import { generatePostAction } from '@/actions/generate';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Badge } from '@/components/ui/badge';
import { FileUp, Sparkles, Wand2 } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';

function SubmitButton() {
  const { pending } = useFormStatus();
  return (
    <Button type="submit" disabled={pending} className="w-full sm:w-auto">
      {pending ? (
        <>
          <Sparkles className="mr-2 h-4 w-4 animate-spin" />
          Generating...
        </>
      ) : (
        <>
          <Wand2 className="mr-2 h-4 w-4" />
          Generate with AI
        </>
      )}
    </Button>
  );
}

export function PostEditor() {
  const titleRef = useRef<HTMLInputElement>(null);
  const contentRef = useRef<HTMLTextAreaElement>(null);
  const keywordsRef = useRef<HTMLInputElement>(null);
  const { toast } = useToast();

  const [state, formAction] = useFormState(generatePostAction, {
    success: false,
    message: '',
  });

  useEffect(() => {
    if (state.success && state.data) {
      if (titleRef.current) titleRef.current.value = state.data.title;
      if (contentRef.current) contentRef.current.value = state.data.content;
      if (keywordsRef.current) keywordsRef.current.value = state.data.keywords.join(', ');
      toast({
        title: "Content Generated!",
        description: "Your blog post has been successfully generated by AI.",
      });
    } else if (!state.success && state.message) {
      toast({
        title: "Error",
        description: state.message,
        variant: "destructive",
      });
    }
  }, [state, toast]);

  return (
    <div className="space-y-8">
      <Card>
        <CardHeader>
          <CardTitle className="font-headline">AI Post Generator</CardTitle>
          <CardDescription>
            Just give us a topic, and our AI will write an engaging blog post for you.
          </CardDescription>
        </CardHeader>
        <CardContent>
          <form action={formAction} className="space-y-4">
            <div>
              <Label htmlFor="topic">Blog Post Topic</Label>
              <div className="flex flex-col sm:flex-row gap-2 mt-1">
                <Input
                  id="topic"
                  name="topic"
                  placeholder="e.g., 'The evolution of the Shonen protagonist'"
                  required
                  minLength={10}
                />
                <SubmitButton />
              </div>
            </div>
          </form>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle className="font-headline">Post Editor</CardTitle>
          <CardDescription>
            Review and edit the generated content below. You can also upload a cover image.
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-6">
          <div className="space-y-2">
            <Label htmlFor="title">Post Title</Label>
            <Input ref={titleRef} id="title" name="title" placeholder="Your Post Title" />
          </div>

          <div className="space-y-2">
             <Label>Cover Image</Label>
             <div className="flex items-center justify-center w-full">
                <label htmlFor="dropzone-file" className="flex flex-col items-center justify-center w-full h-64 border-2 border-dashed rounded-lg cursor-pointer bg-card hover:bg-muted transition-colors">
                    <div className="flex flex-col items-center justify-center pt-5 pb-6">
                        <FileUp className="w-8 h-8 mb-4 text-muted-foreground" />
                        <p className="mb-2 text-sm text-muted-foreground"><span className="font-semibold">Click to upload</span> or drag and drop</p>
                        <p className="text-xs text-muted-foreground">SVG, PNG, JPG or GIF (MAX. 800x400px)</p>
                    </div>
                    <input id="dropzone-file" type="file" className="hidden" />
                </label>
            </div> 
          </div>

          <div className="space-y-2">
            <Label htmlFor="content">Content</Label>
            <Textarea
              ref={contentRef}
              id="content"
              name="content"
              placeholder="Your blog post content..."
              className="min-h-[300px]"
            />
          </div>

          <div className="space-y-2">
            <Label htmlFor="keywords">Keywords</Label>
            <Input ref={keywordsRef} id="keywords" name="keywords" placeholder="e.g., anime, shonen, battle" />
            <div className="flex flex-wrap gap-2 pt-2">
                <Badge variant="secondary">Anime</Badge>
                <Badge variant="secondary">Shonen</Badge>
                <Badge variant="secondary">Protagonist</Badge>
            </div>
          </div>
          
          <div className="flex justify-end gap-2">
            <Button variant="outline">Save as Draft</Button>
            <Button>Publish Post</Button>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}
